# 

version: '3.8'

networks:
  healthup-network:
    driver: bridge

services:
  postgres:
    image: postgres:15
    container_name: healthup-postgres
    environment:
      POSTGRES_USER: healthup_user
      POSTGRES_PASSWORD: healthup_password
      POSTGRES_DB: healthup_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U healthup_user -d healthup_db']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - healthup-network

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: healthup-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - healthup-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:10.0.0
    container_name: healthup-grafana
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - healthup-network
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.9.0
    container_name: healthup-loki
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-storage:/loki
    networks:
      - healthup-network

volumes:
  postgres_data:
  grafana-storage:
  loki-storage: